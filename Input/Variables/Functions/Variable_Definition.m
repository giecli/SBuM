varnamecell.HouseNbr.ShortName          = 'HouseNbr';
        varnamecell.HouseNbr.LongName       = 'House number' ;
        varnamecell.HouseNbr.Unit           = '[]' ;
        varnamecell.HouseNbr.Defaultvalue   = '' ;
        varnamecell.HouseNbr.Tooltip        = 'The House number is given automatically' ;
        varnamecell.HouseNbr.Comparefield   = 'TO BE REMOVED';
        varnamecell.HouseNbr.Defaultcreate  = '' ;
        varnamecell.HouseNbr.Type           = 'string' ;
        varnamecell.HouseNbr.LowLimit       = '' ;
        varnamecell.HouseNbr.HighLimit      = '' ;
        varnamecell.HouseNbr.Exception      = '' ;
varnamecell.StartingDate.ShortName          = 'StartingDate';
        varnamecell.StartingDate.LongName       = 'Starting Date' ;
        varnamecell.StartingDate.Unit           = '[day]' ;
        varnamecell.StartingDate.Defaultvalue   = '01/01/12' ;
        varnamecell.StartingDate.Tooltip        = 'Defines the starting date of the simulation for the selected building' ;
        varnamecell.StartingDate.Comparefield   = 'date';
        varnamecell.StartingDate.Defaultcreate  = '01/01/12' ;
        varnamecell.StartingDate.Type           = 'string' ;
        varnamecell.StartingDate.LowLimit       = '01/01/2012' ;
        varnamecell.StartingDate.HighLimit      = '31/12/2012' ;
        varnamecell.StartingDate.Exception      = -1 ;
varnamecell.EndingDate.ShortName          = 'EndingDate';
        varnamecell.EndingDate.LongName       = 'Ending Date' ;
        varnamecell.EndingDate.Unit           = '[day]' ;
        varnamecell.EndingDate.Defaultvalue   = '31/12/12' ;
        varnamecell.EndingDate.Tooltip        = 'Defines the ending date of the simulation for the selected building' ;
        varnamecell.EndingDate.Comparefield   = 'date';
        varnamecell.EndingDate.Defaultcreate  = '31/12/12' ;
        varnamecell.EndingDate.Type           = 'date' ;
        varnamecell.EndingDate.LowLimit       = '01/01/2012' ;
        varnamecell.EndingDate.HighLimit      = '31/12/2012' ;
        varnamecell.EndingDate.Exception      = -1 ;
varnamecell.Latitude.ShortName          = 'Latitude';
        varnamecell.Latitude.LongName       = 'Latitude' ;
        varnamecell.Latitude.Unit           = '[°]' ;
        varnamecell.Latitude.Defaultvalue   = '65.0593' ;
        varnamecell.Latitude.Tooltip        = 'Give the latitude of the building. For instance, Oulu is located at Longitude 25°' ;
        varnamecell.Latitude.Comparefield   = 'Compare';
        varnamecell.Latitude.Defaultcreate  = '65.0593' ;
        varnamecell.Latitude.Type           = 'double' ;
        varnamecell.Latitude.LowLimit       = -180 ;
        varnamecell.Latitude.HighLimit      = 180 ;
        varnamecell.Latitude.Exception      = '' ;
varnamecell.Longitude.ShortName          = 'Longitude';
        varnamecell.Longitude.LongName       = 'Longitude' ;
        varnamecell.Longitude.Unit           = '[°]' ;
        varnamecell.Longitude.Defaultvalue   = '25.4663' ;
        varnamecell.Longitude.Tooltip        = 'Give the longitude of the building. For instance, Oulu is located at Longitude 25°' ;
        varnamecell.Longitude.Comparefield   = 'Compare';
        varnamecell.Longitude.Defaultcreate  = '25.4663' ;
        varnamecell.Longitude.Type           = 'double' ;
        varnamecell.Longitude.LowLimit       = -180 ;
        varnamecell.Longitude.HighLimit      = 180 ;
        varnamecell.Longitude.Exception      = '' ;
varnamecell.User_Type.ShortName          = 'User_Type';
        varnamecell.User_Type.LongName       = 'Type of User' ;
        varnamecell.User_Type.Unit           = '[]' ;
        varnamecell.User_Type.Defaultvalue   = '1' ;
        varnamecell.User_Type.Tooltip        = '1 = Green User; 2 = Orange User; 3 = Brown User' ;
        varnamecell.User_Type.Comparefield   = {{'1';'2';'3'} {'Green';'Orange';'Brown'}} ;
        varnamecell.User_Type.Defaultcreate  = '1' ;
        varnamecell.User_Type.Type           = 'cell' ;
        varnamecell.User_Type.LowLimit       = '' ;
        varnamecell.User_Type.HighLimit      = '' ;
        varnamecell.User_Type.Exception      = {'1';'2';'3'} ;
varnamecell.Time_Step.ShortName          = 'Time_Step';
        varnamecell.Time_Step.LongName       = 'Time Step' ;
        varnamecell.Time_Step.Unit           = '[]' ;
        varnamecell.Time_Step.Defaultvalue   = 'Hourly';
        varnamecell.Time_Step.Tooltip        = 'So far, the model has been used with only Hourly simulation.' ;
        varnamecell.Time_Step.Comparefield   = 'TO BE REMOVED';
        varnamecell.Time_Step.Defaultcreate  = 'Hourly';
        varnamecell.Time_Step.Type           = 'string' ;
        varnamecell.Time_Step.LowLimit       = '' ;
        varnamecell.Time_Step.HighLimit      = '' ;
        varnamecell.Time_Step.Exception      = '' ;
varnamecell.WindTurbine.ShortName          = 'WindTurbine';
        varnamecell.WindTurbine.LongName       = 'Wind Turbine' ;
        varnamecell.WindTurbine.Unit           = '[]' ;
        varnamecell.WindTurbine.Defaultvalue   = '0';
        varnamecell.WindTurbine.Tooltip        = 'Possibility to integrate a micro wind turbine within the model.' ;
        varnamecell.WindTurbine.Comparefield   = {{'0';'1'} {'Inactive';'Active'}} ;
        varnamecell.WindTurbine.Defaultcreate  = '0';
        varnamecell.WindTurbine.Type           = 'cell' ;
        varnamecell.WindTurbine.LowLimit       = '' ;
        varnamecell.WindTurbine.HighLimit      = '' ;
        varnamecell.WindTurbine.Exception      = {'0';'1'} ;
varnamecell.PhotoVol.ShortName          = 'PhotoVol';
        varnamecell.PhotoVol.LongName       = 'PV-Panels' ;
        varnamecell.PhotoVol.Unit           = '[]' ;
        varnamecell.PhotoVol.Defaultvalue   = '0';
        varnamecell.PhotoVol.Tooltip        = 'Possibility to integrate a PV-panels within the model.' ;
        varnamecell.PhotoVol.Comparefield   = {{'0';'1'} {'Inactive';'Active'}} ;
        varnamecell.PhotoVol.Defaultcreate  = '0';
        varnamecell.PhotoVol.Type           = 'cell' ;
        varnamecell.PhotoVol.LowLimit       = '' ;
        varnamecell.PhotoVol.HighLimit      = '' ;
        varnamecell.PhotoVol.Exception      = {'0';'1'} ;
varnamecell.FuelCell.ShortName          = 'FuelCell';
        varnamecell.FuelCell.LongName       = 'Fuel Cell (PEMFC)' ;
        varnamecell.FuelCell.Unit           = '[]' ;
        varnamecell.FuelCell.Defaultvalue   = '0';
        varnamecell.FuelCell.Tooltip        = 'Possibility to integrate a micro Fuel Cell within the model.' ;
        varnamecell.FuelCell.Comparefield   = {{'0';'1'} {'Inactive';'Active'}} ;
        varnamecell.FuelCell.Defaultcreate  = '0';
        varnamecell.FuelCell.Type           = 'cell' ;
        varnamecell.FuelCell.LowLimit       = '' ;
        varnamecell.FuelCell.HighLimit      = '' ;
        varnamecell.FuelCell.Exception      = {'0';'1'} ;
varnamecell.WTPowertot.ShortName          = 'WTPowertot';
        varnamecell.WTPowertot.LongName       = 'Wind Turbine Maximum Power' ;
        varnamecell.WTPowertot.Unit           = '[kW]' ;
        varnamecell.WTPowertot.Defaultvalue   = '-1';
        varnamecell.WTPowertot.Tooltip        = 'In case a wind turbine is put in placed, give the rated power in [kW].' ;
        varnamecell.WTPowertot.Comparefield   = 'Compare';
        varnamecell.WTPowertot.Defaultcreate  = '-1';
        varnamecell.WTPowertot.Type           = 'double' ;
        varnamecell.WTPowertot.LowLimit       = 0 ;
        varnamecell.WTPowertot.HighLimit      = Inf ;
        varnamecell.WTPowertot.Exception      = -1 ;
varnamecell.WindSpeed.ShortName          = 'WindSpeed';
        varnamecell.WindSpeed.LongName       = 'Base Wind Speed' ;
        varnamecell.WindSpeed.Unit           = '[m/s]' ;
        varnamecell.WindSpeed.Defaultvalue   = '9';
        varnamecell.WindSpeed.Tooltip        = 'The Base wind speed is a characteristics of the wind turbine. It is expressed in [m/s]. If you do not know the value, input "-1", it will use the default value of 9 m/s.' ;
        varnamecell.WindSpeed.Comparefield   = 'Compare';
        varnamecell.WindSpeed.Defaultcreate  = '9';
        varnamecell.WindSpeed.Type           = 'double' ;
        varnamecell.WindSpeed.LowLimit       = 0 ;
        varnamecell.WindSpeed.HighLimit      = Inf ;
        varnamecell.WindSpeed.Exception      = -1 ;
varnamecell.Lambdanom.ShortName          = 'Lambdanom';
        varnamecell.Lambdanom.LongName       = 'Tip speed ratio' ;
        varnamecell.Lambdanom.Unit           = '[]' ;
        varnamecell.Lambdanom.Defaultvalue   = '8.1';
        varnamecell.Lambdanom.Tooltip        = 'The nominal Tip Speed Ratio is a characteristics of the wind turbine.  It does not have any unit. If you do not know the value, input "-1", it will use the default value of 8.1.' ;
        varnamecell.Lambdanom.Comparefield   = 'Compare';
        varnamecell.Lambdanom.Defaultcreate  = '8.1';
        varnamecell.Lambdanom.Type           = 'double' ;
        varnamecell.Lambdanom.LowLimit       = 0 ;
        varnamecell.Lambdanom.HighLimit      = Inf ;
        varnamecell.Lambdanom.Exception      = -1 ;
varnamecell.Cp.ShortName          = 'Cp';
        varnamecell.Cp.LongName       = 'Power Coefficient' ;
        varnamecell.Cp.Unit           = '[]' ;
        varnamecell.Cp.Defaultvalue   = '0.48';
        varnamecell.Cp.Tooltip        = 'The Power Coefficient is a characteristics of the wind turbine.  It does not have any unit. If you do not know the value, input "-1", it will use the default value of 0.48.' ;
        varnamecell.Cp.Comparefield   = 'Compare';
        varnamecell.Cp.Defaultcreate  = '0.48';
        varnamecell.Cp.Type           = 'double' ;
        varnamecell.Cp.LowLimit       = 0 ;
        varnamecell.Cp.HighLimit      = Inf ;
        varnamecell.Cp.Exception      = -1 ;
varnamecell.MaxPowerWT.ShortName          = 'MaxPowerWT';
        varnamecell.MaxPowerWT.LongName       = 'Maximum power at base wind speed (pu of nominal mechanical power)' ;
        varnamecell.MaxPowerWT.Unit           = '[%]' ;
        varnamecell.MaxPowerWT.Defaultvalue   = '0.73';
        varnamecell.MaxPowerWT.Tooltip        = 'The Maximum power at base wind speed (pu of nominal mechanical power) is a characteristics of the wind turbine.  It is expressed in [%]. If you do not know the value, input "-1", it will use the default value of 0.73%.' ;
        varnamecell.MaxPowerWT.Comparefield   = 'Compare';
        varnamecell.MaxPowerWT.Defaultcreate  = '0.73';
        varnamecell.MaxPowerWT.Type           = 'double' ;
        varnamecell.MaxPowerWT.LowLimit       = 0 ;
        varnamecell.MaxPowerWT.HighLimit      = Inf ;
        varnamecell.MaxPowerWT.Exception      = -1 ;
varnamecell.Baserotspeed.ShortName          = 'Baserotspeed';
        varnamecell.Baserotspeed.LongName       = 'Base rotational speed (pu of base generator speed)' ;
        varnamecell.Baserotspeed.Unit           = '[%]' ;
        varnamecell.Baserotspeed.Defaultvalue   = '1.2';
        varnamecell.Baserotspeed.Tooltip        = 'TheBase rotational speed (pu of base generator speed) is a characteristics of the wind turbine.  It is expressed in [%]. If you do not know the value, input "-1", it will use the default value of 1.2%.' ;
        varnamecell.Baserotspeed.Comparefield   = 'Compare';
        varnamecell.Baserotspeed.Defaultcreate  = '1.2';
        varnamecell.Baserotspeed.Type           = 'double' ;
        varnamecell.Baserotspeed.LowLimit       = 0 ;
        varnamecell.Baserotspeed.HighLimit      = Inf ;
        varnamecell.Baserotspeed.Exception      = -1 ;
varnamecell.Pitch.ShortName          = 'Pitch';
        varnamecell.Pitch.LongName       = 'Pitch' ;
        varnamecell.Pitch.Unit           = '[°]' ;
        varnamecell.Pitch.Defaultvalue   = '4';
        varnamecell.Pitch.Tooltip        = 'The wind turbine power characteristics (Beta>=0) is a characteristics of the wind turbine.  It is expressed in [°]. If you do not know the value, input "-1", it will use the default value of 4°.' ;
        varnamecell.Pitch.Comparefield   = 'Compare';
        varnamecell.Pitch.Defaultcreate  = '4';
        varnamecell.Pitch.Type           = 'double' ;
        varnamecell.Pitch.LowLimit       = 0 ;
        varnamecell.Pitch.HighLimit      = Inf ;
        varnamecell.Pitch.Exception      = -1 ;
varnamecell.EfficiencyWT.ShortName          = 'EfficiencyWT';
        varnamecell.EfficiencyWT.LongName       = 'Efficiency of the wind turbine' ;
        varnamecell.EfficiencyWT.Unit           = '[]' ;
        varnamecell.EfficiencyWT.Defaultvalue   = '0.68';
        varnamecell.EfficiencyWT.Tooltip        = 'The Efficiency of the WT is a characteristics of the wind turbine.  It does not have any unit. If you do not know the value, input "-1", it will use the default value of 0.68.' ;
        varnamecell.EfficiencyWT.Comparefield   = 'Compare';
        varnamecell.EfficiencyWT.Defaultcreate  = '0.68';
        varnamecell.EfficiencyWT.Type           = 'double' ;
        varnamecell.EfficiencyWT.LowLimit       = 0 ;
        varnamecell.EfficiencyWT.HighLimit      = Inf ;
        varnamecell.EfficiencyWT.Exception      = -1 ;
varnamecell.NbrmodTot.ShortName          = 'NbrmodTot';
        varnamecell.NbrmodTot.LongName       = 'Total Number of modules' ;
        varnamecell.NbrmodTot.Unit           = '[]' ;
        varnamecell.NbrmodTot.Defaultvalue   = '1';
        varnamecell.NbrmodTot.Tooltip        = 'It describes the Total Number of modules installed for this building. It is dimensionless as the size of 1 module will be given in the characteristics of the PV panels.' ; 
        varnamecell.NbrmodTot.Comparefield   = 'Compare';
        varnamecell.NbrmodTot.Defaultcreate  = '1';
        varnamecell.NbrmodTot.Type           = 'double' ;
        varnamecell.NbrmodTot.LowLimit       = 0 ;
        varnamecell.NbrmodTot.HighLimit      = Inf ;
        varnamecell.NbrmodTot.Exception      = -1 ;
varnamecell.Nbrmodser.ShortName          = 'Nbrmodser';
        varnamecell.Nbrmodser.LongName       = 'Number of module in Series' ;
        varnamecell.Nbrmodser.Unit           = '[]' ;
        varnamecell.Nbrmodser.Defaultvalue   = '1';
        varnamecell.Nbrmodser.Tooltip        = 'Number of module in Series. Remember that this equation has to be satisfied: Nbrmodser * Nbrmodpar = NbrmodTot.' ;   
        varnamecell.Nbrmodser.Comparefield   = 'Compare';
        varnamecell.Nbrmodser.Defaultcreate  = '1';
        varnamecell.Nbrmodser.Type           = 'double' ;
        varnamecell.Nbrmodser.LowLimit       = 0 ;
        varnamecell.Nbrmodser.HighLimit      = Inf ;
        varnamecell.Nbrmodser.Exception      = -1 ;
varnamecell.Nbrmodpar.ShortName          = 'Nbrmodpar';
        varnamecell.Nbrmodpar.LongName       = 'Number of module in parallel' ;
        varnamecell.Nbrmodpar.Unit           = '[]' ;
        varnamecell.Nbrmodpar.Defaultvalue   = '1';
        varnamecell.Nbrmodpar.Tooltip        = 'Number of module in Parallel. Remember that this equation has to be satisfied: Nbrmodser * Nbrmodpar = NbrmodTot.' ;
        varnamecell.Nbrmodpar.Comparefield   = 'Compare';
        varnamecell.Nbrmodpar.Defaultcreate  = '1';
        varnamecell.Nbrmodpar.Type           = 'double' ;
        varnamecell.Nbrmodpar.LowLimit       = 0 ;
        varnamecell.Nbrmodpar.HighLimit      = Inf ;
        varnamecell.Nbrmodpar.Exception      = -1 ;
varnamecell.Aspect.ShortName          = 'Aspect';
        varnamecell.Aspect.LongName       = 'Angle of the panel on a N/S axis' ;
        varnamecell.Aspect.Unit           = '[°]' ;
        varnamecell.Aspect.Defaultvalue   = '-1';
        varnamecell.Aspect.Tooltip        = 'Angle of the panel on a N/S axis (0° = N, 180° = S). If Data = -1 then the values are automatically generated during the simulation. It will be considered either as a 1-axis or 2-axis tracking device.' ;  
        varnamecell.Aspect.Comparefield   = 'Compare';
        varnamecell.Aspect.Defaultcreate  = '-1';
        varnamecell.Aspect.Type           = 'double' ;
        varnamecell.Aspect.LowLimit       = 0 ;
        varnamecell.Aspect.HighLimit      = Inf ;
        varnamecell.Aspect.Exception      = -1 ;
varnamecell.Tilt.ShortName          = 'Tilt';
        varnamecell.Tilt.LongName       = 'Angle of the panels to the horizontal surface' ;
        varnamecell.Tilt.Unit           = '[°]' ;
        varnamecell.Tilt.Defaultvalue   = '-1';
        varnamecell.Tilt.Tooltip        = 'Angle of the panels to the horizontal surface (0° = Horiz, 90° = Ver). If Data = -1 then the values are automatically generated during the simulation. It will be considered either as a 1-axis or 2-axis tracking device.' ;
        varnamecell.Tilt.Comparefield   = 'Compare';
        varnamecell.Tilt.Defaultcreate  = '-1';
        varnamecell.Tilt.Type           = 'double' ;
        varnamecell.Tilt.LowLimit       = 0 ;
        varnamecell.Tilt.HighLimit      = Inf ;
        varnamecell.Tilt.Exception      = -1 ;
varnamecell.Voc.ShortName          = 'Voc';
        varnamecell.Voc.LongName       = 'Open circuit voltage' ;
        varnamecell.Voc.Unit           = '[V]' ;
        varnamecell.Voc.Defaultvalue   = '36.3';
        varnamecell.Voc.Tooltip        = 'The Open Circuit Voltage (Voc) is a characteristics of a PV cell. It represents the maximum voltage output by the cell (in open circuit). This is a manufacturer information. It is considered that 1 and only 1 brand can be used and installed at the same time on a building. It can be accessed through Photon Magazine and is expressed in [V].' ;  
        varnamecell.Voc.Comparefield   = 'Compare';
        varnamecell.Voc.Defaultcreate  = '36.3';
        varnamecell.Voc.Type           = 'double' ;
        varnamecell.Voc.LowLimit       = 0 ;
        varnamecell.Voc.HighLimit      = Inf ;
        varnamecell.Voc.Exception      = -1 ;
varnamecell.Isc.ShortName          = 'Isc';
        varnamecell.Isc.LongName       = 'Open circuit voltage' ;
        varnamecell.Isc.Unit           = '[A]' ;
        varnamecell.Isc.Defaultvalue   = '8.2';
        varnamecell.Isc.Tooltip        = 'The Short Circuit current (Isc) is a characteristics of a PV cell. It represents the maximum intensity output by the cell (in short circuit position). This is a manufacturer information. It is considered that 1 and only 1 brand can be used and installed at the same time on a building. It can be accessed through Photon Magazine. It is expressed in [A].' ;  
        varnamecell.Isc.Comparefield   = 'Compare';
        varnamecell.Isc.Defaultcreate  = '8.2';
        varnamecell.Isc.Type           = 'double' ;
        varnamecell.Isc.LowLimit       = 0 ;
        varnamecell.Isc.HighLimit      = Inf ;
        varnamecell.Isc.Exception      = -1 ;
varnamecell.MaxPowerPV.ShortName          = 'MaxPowerPV';
        varnamecell.MaxPowerPV.LongName       = 'Max Power of 1 module' ;
        varnamecell.MaxPowerPV.Unit           = '[W]' ;
        varnamecell.MaxPowerPV.Defaultvalue   = '200';
        varnamecell.MaxPowerPV.Tooltip        = 'The maximum power of the PV panels must characterize the maximum output of 1 and only 1 module. Consequently, it is assumed that only one brand at a time can be installed.It is expressed in [W] and the data is available from Photon Magazine.' ;
        varnamecell.MaxPowerPV.Comparefield   = 'Compare';
        varnamecell.MaxPowerPV.Defaultcreate  = '200';
        varnamecell.MaxPowerPV.Type           = 'double' ;
        varnamecell.MaxPowerPV.LowLimit       = 0 ;
        varnamecell.MaxPowerPV.HighLimit      = Inf ;
        varnamecell.MaxPowerPV.Exception      = -1 ;
varnamecell.LengthPV.ShortName          = 'LengthPV';
        varnamecell.LengthPV.LongName       = 'Length of 1 module' ;
        varnamecell.LengthPV.Unit           = '[mm]' ;
        varnamecell.LengthPV.Defaultvalue   = '1657';
        varnamecell.LengthPV.Tooltip        = 'The length of the PV panels must characterize the maximum output of 1 and only 1 module. Consequently, it is assumed that only one brand at a time can be installed.It is expressed in [mm] and the data is available from Photon Magazine.' ; 
        varnamecell.LengthPV.Comparefield   = 'Compare';
        varnamecell.LengthPV.Defaultcreate  = '1657';
        varnamecell.LengthPV.Type           = 'double' ;
        varnamecell.LengthPV.LowLimit       = 0 ;
        varnamecell.LengthPV.HighLimit      = Inf ;
        varnamecell.LengthPV.Exception      = -1 ;
varnamecell.WidthPV.ShortName          = 'WidthPV';
        varnamecell.WidthPV.LongName       = 'Width of 1 module' ;
        varnamecell.WidthPV.Unit           = '[mm]' ;
        varnamecell.WidthPV.Defaultvalue   = '987';
        varnamecell.WidthPV.Tooltip        = 'The width the PV panels must characterize the maximum output of 1 and only 1 module. Consequently, it is assumed that only one brand at a time can be installed.It is expressed in [mm] and the data is available from Photon Magazine.' ;  
        varnamecell.WidthPV.Comparefield   = 'Compare';
        varnamecell.WidthPV.Defaultcreate  = '987';
        varnamecell.WidthPV.Type           = 'double' ;
        varnamecell.WidthPV.LowLimit       = 0 ;
        varnamecell.WidthPV.HighLimit      = Inf ;
        varnamecell.WidthPV.Exception      = -1 ;
varnamecell.NOCT.ShortName          = 'NOCT';
        varnamecell.NOCT.LongName       = 'Normal Operating Cell Temperature (NOCT)' ;
        varnamecell.NOCT.Unit           = '[°C]' ;
        varnamecell.NOCT.Defaultvalue   = '45';
        varnamecell.NOCT.Tooltip        = 'The Nominal Operating Cell Temperature of the PV panels must characterize the maximum output of 1 and only 1 module. Consequently, it is assumed that only one brand can be installed. It is expressed in [°C] and the data is available from Photon Magazine.' ;  
        varnamecell.NOCT.Comparefield   = 'Compare';
        varnamecell.NOCT.Defaultcreate  = '45';
        varnamecell.NOCT.Type           = 'double' ;
        varnamecell.NOCT.LowLimit       = 0 ;
        varnamecell.NOCT.HighLimit      = Inf ;
        varnamecell.NOCT.Exception      = -1 ;
varnamecell.MaxPowerFC.ShortName          = 'MaxPowerFC';
        varnamecell.MaxPowerFC.LongName       = 'Maximum Power for the Fuel Cell' ;
        varnamecell.MaxPowerFC.Unit           = '[]' ;
        varnamecell.MaxPowerFC.Defaultvalue   = '1 kW';
        varnamecell.MaxPowerFC.Tooltip        = 'In case a fuel cell (FC) is installed in the dwelling, the maximum power of the FC must be characterised. Three sizes of FC are available: 1kW, 3kW and 5 kW.' ;  
        varnamecell.MaxPowerFC.Comparefield   = {{'1 kW';'3 kW';'5 kW'} {'1 kW';'3 kW';'5 kW'}} ;
        varnamecell.MaxPowerFC.Defaultcreate  = 'Select...';
        varnamecell.MaxPowerFC.Type           = 'cell' ;
        varnamecell.MaxPowerFC.LowLimit       = '' ;
        varnamecell.MaxPowerFC.HighLimit      = '' ;
        varnamecell.MaxPowerFC.Exception      = {'1 kW';'3 kW';'5 kW'} ;
varnamecell.SolarData.ShortName          = 'SolarData';
        varnamecell.SolarData.LongName       = 'Solar Data' ;
        varnamecell.SolarData.Unit           = '[]' ;
        varnamecell.SolarData.Defaultvalue   = 'Hourly Data';
        varnamecell.SolarData.Tooltip        = 'Two types of data are available. The first one has been taken from measurment in Vihreäsaari, and the other one from Revonlathi. The solar data measurment is an input in the simulation and does not have to be specifically specified. Nevertheless, it would be possible to input the information as an extra array but the file nned to be provided and the unit is [W/m2].' ;  
        varnamecell.SolarData.Comparefield   = 'TO BE REMOVED';
        varnamecell.SolarData.Defaultcreate  = 'Hourly Data';
        varnamecell.SolarData.Type           = 'string' ;
        varnamecell.SolarData.LowLimit       = '' ;
        varnamecell.SolarData.HighLimit      = '' ;
        varnamecell.SolarData.Exception      = '' ;
varnamecell.ContElec.ShortName          = 'ContElec';
        varnamecell.ContElec.LongName       = 'Electric contract' ;
        varnamecell.ContElec.Unit           = '[]' ;
        varnamecell.ContElec.Defaultvalue   = 'Real-time pricing';
        varnamecell.ContElec.Tooltip        = 'The electric contracts have been taken from the commercial offers from Oulun Energia. Oulun energia has 3 main contracts: 1. Varmavirta (energy mix, cheap contract), 2. Vihrevirta (Energy based on biomass production, Middle price), 3. Tuulirvirta (Energy based on wind, High price). There is also an option to use the real-time pricing as an optional input. Real-time pricing is based on the NordPool price.' ;  
        varnamecell.ContElec.Comparefield   = {{'Real-time pricing';'Varmavirta';'Virhevirta';'Tuulivirta'} {'Real-time pricing';'Varmavirta';'Virhevirta';'Tuulivirta'}} ;
        varnamecell.ContElec.Defaultcreate  = 'Select...';
        varnamecell.ContElec.Type           = 'cell' ;
        varnamecell.ContElec.LowLimit       = '' ;
        varnamecell.ContElec.HighLimit      = '' ;
        varnamecell.ContElec.Exception      = {'Real-time pricing';'Varmavirta';'Virhevirta';'Tuulivirta'} ;
varnamecell.inhabitants.ShortName          = 'inhabitants';
        varnamecell.inhabitants.LongName       = 'Number of inhabitants in the buidling' ;
        varnamecell.inhabitants.Unit           = '[]' ;
        varnamecell.inhabitants.Defaultvalue   = '1';
        varnamecell.inhabitants.Tooltip        = 'This variable describes the number of inhabitants in the dwelling. The number is set to be between 1 and 6 inhabitants. Further developments will turn this variable flexible to add as many inhabitants as wished.' ;  
        varnamecell.inhabitants.Comparefield   = {{'1';'2';'3';'4';'5';'6'} {'1';'2';'3';'4';'5';'6'}} ;
        varnamecell.inhabitants.Defaultcreate  = '1';
        varnamecell.inhabitants.Type           = 'cell' ;
        varnamecell.inhabitants.LowLimit       = '' ;
        varnamecell.inhabitants.HighLimit      = '' ;
        varnamecell.inhabitants.Exception      = {'1';'2';'3';'4';'5';'6'};
varnamecell.nbrRoom.ShortName          = 'nbrRoom';
        varnamecell.nbrRoom.LongName       = 'Number of Bedrooms' ;
        varnamecell.nbrRoom.Unit           = '[]' ;
        varnamecell.nbrRoom.Defaultvalue   = '1';
        varnamecell.nbrRoom.Tooltip        = 'The number of rooms is infinite. You can input any positive value greater than 1.' ;  
        varnamecell.nbrRoom.Comparefield   = 'Compare';
        varnamecell.nbrRoom.Defaultcreate  = '1';
        varnamecell.nbrRoom.Type           = 'double' ;
        varnamecell.nbrRoom.LowLimit       = 1 ;
        varnamecell.nbrRoom.HighLimit      = Inf ;
        varnamecell.nbrRoom.Exception      = '' ;
varnamecell.WashMach.ShortName          = 'WashMach';
        varnamecell.WashMach.LongName       = 'Washing Machine' ;
        varnamecell.WashMach.Unit           = '[]' ;
        varnamecell.WashMach.Defaultvalue   = '0';
        varnamecell.WashMach.Tooltip        = 'Input the number of Washing Machine you want to install';
        varnamecell.WashMach.Comparefield   = 'Compare';
        varnamecell.WashMach.Defaultcreate  = '0';
        varnamecell.WashMach.Type           = 'double' ;
        varnamecell.WashMach.LowLimit       = 0 ;
        varnamecell.WashMach.HighLimit      = Inf ;
        varnamecell.WashMach.Exception      = -1 ;
varnamecell.clWashMach.ShortName          = 'clWashMach';
        varnamecell.clWashMach.LongName       = 'Washing Machine class' ;
        varnamecell.clWashMach.Unit           = '[]' ;
        varnamecell.clWashMach.Defaultvalue   = 'A or B class';
        varnamecell.clWashMach.Tooltip        = 'In case there would be a washing machine, the class of the washing machine has to be selected. The classes follow the labels given by the Energy-using.Product directive of the EU. Classes have been divided into three categories in order to simplify the choice. A or B class, C or D class, E or F class';
        varnamecell.clWashMach.Comparefield   = {{'A or B class';'C or D class';'E or F class'} {'A or B class';'C or D class';'E or F class'}} ;
        varnamecell.clWashMach.Defaultcreate  = 'A or B class';
        varnamecell.clWashMach.Type           = 'cell' ;
        varnamecell.clWashMach.LowLimit       = '' ;
        varnamecell.clWashMach.HighLimit      = '' ;
        varnamecell.clWashMach.Exception      = {'A or B class';'C or D class';'E or F class'} ;
varnamecell.DishWash.ShortName          = 'DishWash';
        varnamecell.DishWash.LongName       = 'Dish Washer' ;
        varnamecell.DishWash.Unit           = '[]' ;
        varnamecell.DishWash.Defaultvalue   = '0';
        varnamecell.DishWash.Tooltip        = 'Input the number of Dish Washer you want to install';
        varnamecell.DishWash.Comparefield   = 'Compare';
        varnamecell.DishWash.Defaultcreate  = '0';
        varnamecell.DishWash.Type           = 'double' ;
        varnamecell.DishWash.LowLimit       = 0 ;
        varnamecell.DishWash.HighLimit      = Inf ;
        varnamecell.DishWash.Exception      = -1 ;
varnamecell.clDishWash.ShortName          = 'clDishWash';
        varnamecell.clDishWash.LongName       = 'Dishwasher Class' ;
        varnamecell.clDishWash.Unit           = '[]' ;
        varnamecell.clDishWash.Defaultvalue   = 'A or B class';
        varnamecell.clDishWash.Tooltip        = 'In case there would be a Dish Washer, the class of the Dish washer has to be selected. The classes follow the labels given by the Energy-using.Product directive of the EU. Classes have been divided into three categories in order to simplify the choice. A or B class, C or D class, E or F class';
        varnamecell.clDishWash.Comparefield   = {{'A or B class';'C or D class';'E or F class'} {'A or B class';'C or D class';'E or F class'}} ;
        varnamecell.clDishWash.Defaultcreate  = 'A or B class';
        varnamecell.clDishWash.Type           = 'cell' ;
        varnamecell.clDishWash.LowLimit       = '' ;
        varnamecell.clDishWash.HighLimit      = '' ;
        varnamecell.clDishWash.Exception      = {'A or B class';'C or D class';'E or F class'} ;
varnamecell.Elec.ShortName          = 'Elec';
        varnamecell.Elec.LongName       = 'Electric plates' ;
        varnamecell.Elec.Unit           = '[]' ;
        varnamecell.Elec.Defaultvalue   = '0';
        varnamecell.Elec.Tooltip        = 'Input the number of Electric plates you want to install';
        varnamecell.Elec.Comparefield   = 'Compare';
        varnamecell.Elec.Defaultcreate  = '0';
        varnamecell.Elec.Type           = 'double' ;
        varnamecell.Elec.LowLimit       = 0 ;
        varnamecell.Elec.HighLimit      = Inf ;
        varnamecell.Elec.Exception      = -1 ;
varnamecell.Kettle.ShortName          = 'Kettle';
        varnamecell.Kettle.LongName       = 'Kettle' ;
        varnamecell.Kettle.Unit           = '[]' ;
        varnamecell.Kettle.Defaultvalue   = '0';
        varnamecell.Kettle.Tooltip        = 'Input the number of Kettle you want to install';
        varnamecell.Kettle.Comparefield   = 'Compare';
        varnamecell.Kettle.Defaultcreate  = '0';
        varnamecell.Kettle.Type           = 'double' ;
        varnamecell.Kettle.LowLimit       = 0 ;
        varnamecell.Kettle.HighLimit      = Inf ;
        varnamecell.Kettle.Exception      = -1 ;
varnamecell.clKettle.ShortName          = 'clKettle';
        varnamecell.clKettle.LongName       = 'Kettle Class' ;
        varnamecell.clKettle.Unit           = '[]' ;
        varnamecell.clKettle.Defaultvalue   = 'A or B class';
        varnamecell.clKettle.Tooltip        = 'In case there would be a washing machine, the class of the Kettle has to be selected. The classes follow the labels given by the Energy-using.Product directive of the EU. Classes have been divided into three categories in order to simplify the choice. A or B class, C or D class, E or F class';
        varnamecell.clKettle.Comparefield   = {{'A or B class';'C or D class';'E or F class'} {'A or B class';'C or D class';'E or F class'}} ;
        varnamecell.clKettle.Defaultcreate  = 'A or B class';
        varnamecell.clKettle.Type           = 'cell' ;
        varnamecell.clKettle.LowLimit       = '' ;
        varnamecell.clKettle.HighLimit      = '' ;
        varnamecell.clKettle.Exception      = {'A or B class';'C or D class';'E or F class'} ;
varnamecell.Oven.ShortName          = 'Oven';
        varnamecell.Oven.LongName       = 'Oven' ;
        varnamecell.Oven.Unit           = '[]' ;
        varnamecell.Oven.Defaultvalue   = '0';
        varnamecell.Oven.Tooltip        = 'Input the number of Oven you want to install';
        varnamecell.Oven.Comparefield   = 'Compare';
        varnamecell.Oven.Defaultcreate  = '0';
        varnamecell.Oven.Type           = 'double' ;
        varnamecell.Oven.LowLimit       = 0 ;
        varnamecell.Oven.HighLimit      = Inf ;
        varnamecell.Oven.Exception      = -1 ;
varnamecell.clOven.ShortName          = 'clOven';
        varnamecell.clOven.LongName       = 'Oven Class' ;
        varnamecell.clOven.Unit           = '[]' ;
        varnamecell.clOven.Defaultvalue   = 'A or B class';
        varnamecell.clOven.Tooltip        = 'In case there would be a Oven, the class of the Kettle has to be selected. The classes follow the labels given by the Energy-using.Product directive of the EU. Classes have been divided into three categories in order to simplify the choice. A or B class, C or D class, E or F class';
        varnamecell.clOven.Comparefield   = {{'A or B class';'C or D class';'E or F class'} {'A or B class';'C or D class';'E or F class'}} ;
        varnamecell.clOven.Defaultcreate  = 'A or B class';
        varnamecell.clOven.Type           = 'cell' ;
        varnamecell.clOven.LowLimit       = '' ;
        varnamecell.clOven.HighLimit      = '' ;
        varnamecell.clOven.Exception      = {'A or B class';'C or D class';'E or F class'} ;
varnamecell.Coffee.ShortName          = 'Coffee';
        varnamecell.Coffee.LongName       = 'Coffee' ;
        varnamecell.Coffee.Unit           = '[]' ;
        varnamecell.Coffee.Defaultvalue   = '0';
        varnamecell.Coffee.Tooltip        = 'Input the number of Coffee you want to install';
        varnamecell.Coffee.Comparefield   = 'Compare';
        varnamecell.Coffee.Defaultcreate  = '0';
        varnamecell.Coffee.Type           = 'double' ;
        varnamecell.Coffee.LowLimit       = 0 ;
        varnamecell.Coffee.HighLimit      = Inf ;
        varnamecell.Coffee.Exception      = -1 ;
varnamecell.clCoffee.ShortName          = 'clCoffee';
        varnamecell.clCoffee.LongName       = 'Coffee Class' ;
        varnamecell.clCoffee.Unit           = '[]' ;
        varnamecell.clCoffee.Defaultvalue   = 'A or B class';
        varnamecell.clCoffee.Tooltip        = 'In case there would be a Coffee, the class of the Coffee has to be selected. The classes follow the labels given by the Energy-using.Product directive of the EU. Classes have been divided into three categories in order to simplify the choice. A or B class, C or D class, E or F class';
        varnamecell.clCoffee.Comparefield   = {{'A or B class';'C or D class';'E or F class'} {'A or B class';'C or D class';'E or F class'}} ;
        varnamecell.clCoffee.Defaultcreate  = 'A or B class';
        varnamecell.clCoffee.Type           = 'cell' ;
        varnamecell.clCoffee.LowLimit       = '' ;
        varnamecell.clCoffee.HighLimit      = '' ;
        varnamecell.clCoffee.Exception      = {'A or B class';'C or D class';'E or F class'} ;
varnamecell.MW.ShortName          = 'MW';
        varnamecell.MW.LongName       = 'Micro-Wave' ;
        varnamecell.MW.Unit           = '[]' ;
        varnamecell.MW.Defaultvalue   = '0';
        varnamecell.MW.Tooltip        = 'Input the number of Micro-Wave you want to install';
        varnamecell.MW.Comparefield   = 'Compare';
        varnamecell.MW.Defaultcreate  = '0';
        varnamecell.MW.Type           = 'double' ;
        varnamecell.MW.LowLimit       = 0 ;
        varnamecell.MW.HighLimit      = Inf ;
        varnamecell.MW.Exception      = -1 ;
varnamecell.clMW.ShortName          = 'clMW';
        varnamecell.clMW.LongName       = 'Micro-Wave Class' ;
        varnamecell.clMW.Unit           = '[]' ;
        varnamecell.clMW.Defaultvalue   = 'A or B class';
        varnamecell.clMW.Tooltip        = 'In case there would be a Micro-Wave, the class of the Micro-Wave has to be selected. The classes follow the labels given by the Energy-using.Product directive of the EU. Classes have been divided into three categories in order to simplify the choice. A or B class, C or D class, E or F class';
        varnamecell.clMW.Comparefield   = {{'A or B class';'C or D class';'E or F class'} {'A or B class';'C or D class';'E or F class'}} ;
        varnamecell.clMW.Defaultcreate  = 'A or B class';
        varnamecell.clMW.Type           = 'cell' ;
        varnamecell.clMW.LowLimit       = '' ;
        varnamecell.clMW.HighLimit      = '' ;
        varnamecell.clMW.Exception      = {'A or B class';'C or D class';'E or F class'} ;
varnamecell.Toas.ShortName          = 'Toas';
        varnamecell.Toas.LongName       = 'Toaster' ;
        varnamecell.Toas.Unit           = '[]' ;
        varnamecell.Toas.Defaultvalue   = '0';
        varnamecell.Toas.Tooltip        = 'Input the number of Toaster you want to install';
        varnamecell.Toas.Comparefield   = 'Compare';
        varnamecell.Toas.Defaultcreate  = '0';
        varnamecell.Toas.Type           = 'double' ;
        varnamecell.Toas.LowLimit       = 0 ;
        varnamecell.Toas.HighLimit      = Inf ;
        varnamecell.Toas.Exception      = -1 ;
varnamecell.clToas.ShortName          = 'clMW';
        varnamecell.clToas.LongName       = 'Toaster Class' ;
        varnamecell.clToas.Unit           = '[]' ;
        varnamecell.clToas.Defaultvalue   = 'A or B class';
        varnamecell.clToas.Tooltip        = 'In case there would be a Toaster, the class of the Toaster has to be selected. The classes follow the labels given by the Energy-using.Product directive of the EU. Classes have been divided into three categories in order to simplify the choice. A or B class, C or D class, E or F class';
        varnamecell.clToas.Comparefield   = {{'A or B class';'C or D class';'E or F class'} {'A or B class';'C or D class';'E or F class'}} ;
        varnamecell.clToas.Defaultcreate  = 'A or B class';
        varnamecell.clToas.Type           = 'cell' ;
        varnamecell.clToas.LowLimit       = '' ;
        varnamecell.clToas.HighLimit      = '' ;
        varnamecell.clToas.Exception      = {'A or B class';'C or D class';'E or F class'} ;
varnamecell.Waff.ShortName          = 'Waff';
        varnamecell.Waff.LongName       = 'Waffle Maker' ;
        varnamecell.Waff.Unit           = '[]' ;
        varnamecell.Waff.Defaultvalue   = '0';
        varnamecell.Waff.Tooltip        = 'Input the number of Waffle Maker you want to install';
        varnamecell.Waff.Comparefield   = 'Compare';
        varnamecell.Waff.Defaultcreate  = '0';
        varnamecell.Waff.Type           = 'double' ;
        varnamecell.Waff.LowLimit       = 0 ;
        varnamecell.Waff.HighLimit      = Inf ;
        varnamecell.Waff.Exception      = -1 ;
varnamecell.clWaff.ShortName          = 'clWaff';
        varnamecell.clWaff.LongName       = 'Waffle Maker Class' ;
        varnamecell.clWaff.Unit           = '[]' ;
        varnamecell.clWaff.Defaultvalue   = 'A or B class';
        varnamecell.clWaff.Tooltip        = 'In case there would be a Waffle Maker, the class of the Waffle Maker has to be selected. The classes follow the labels given by the Energy-using.Product directive of the EU. Classes have been divided into three categories in order to simplify the choice. A or B class, C or D class, E or F class';
        varnamecell.clWaff.Comparefield   = {{'A or B class';'C or D class';'E or F class'} {'A or B class';'C or D class';'E or F class'}} ;
        varnamecell.clWaff.Defaultcreate  = 'A or B class';
        varnamecell.clWaff.Type           = 'cell' ;
        varnamecell.clWaff.LowLimit       = '' ;
        varnamecell.clWaff.HighLimit      = '' ;
        varnamecell.clWaff.Exception      = {'A or B class';'C or D class';'E or F class'} ;
varnamecell.Fridge.ShortName          = 'Fridge';
        varnamecell.Fridge.LongName       = 'Fridge' ;
        varnamecell.Fridge.Unit           = '[]' ;
        varnamecell.Fridge.Defaultvalue   = '0';
        varnamecell.Fridge.Tooltip        = 'Input the number of Fridge you want to install';
        varnamecell.Fridge.Comparefield   = 'Compare';
        varnamecell.Fridge.Defaultcreate  = '0';
        varnamecell.Fridge.Type           = 'double' ;
        varnamecell.Fridge.LowLimit       = 0 ;
        varnamecell.Fridge.HighLimit      = Inf ;
        varnamecell.Fridge.Exception      = -1 ;
varnamecell.clFridge.ShortName          = 'clFridge';
        varnamecell.clFridge.LongName       = 'Fridge Class' ;
        varnamecell.clFridge.Unit           = '[]' ;
        varnamecell.clFridge.Defaultvalue   = 'A or B class';
        varnamecell.clFridge.Tooltip        = 'In case there would be a Fridge, the class of the Fridge has to be selected. The classes follow the labels given by the Energy-using.Product directive of the EU. Classes have been divided into three categories in order to simplify the choice. A or B class, C or D class, E or F class';
        varnamecell.clFridge.Comparefield   = {{'A or B class';'C or D class';'E or F class'} {'A or B class';'C or D class';'E or F class'}} ;
        varnamecell.clFridge.Defaultcreate  = 'A or B class';
        varnamecell.clFridge.Type           = 'cell' ;
        varnamecell.clFridge.LowLimit       = '' ;
        varnamecell.clFridge.HighLimit      = '' ;
        varnamecell.clFridge.Exception      = {'A or B class';'C or D class';'E or F class'} ;
varnamecell.Tele.ShortName          = 'Tele';
        varnamecell.Tele.LongName       = 'Television' ;
        varnamecell.Tele.Unit           = '[]' ;
        varnamecell.Tele.Defaultvalue   = '0';
        varnamecell.Tele.Tooltip        = 'Input the number of Television you want to install';
        varnamecell.Tele.Comparefield   = 'Compare';
        varnamecell.Tele.Defaultcreate  = '0';
        varnamecell.Tele.Type           = 'double' ;
        varnamecell.Tele.LowLimit       = 0 ;
        varnamecell.Tele.HighLimit      = Inf ;
        varnamecell.Tele.Exception      = -1 ;
varnamecell.clTele.ShortName          = 'clTele';
        varnamecell.clTele.LongName       = 'Television Class' ;
        varnamecell.clTele.Unit           = '[]' ;
        varnamecell.clTele.Defaultvalue   = 'A or B class';
        varnamecell.clTele.Tooltip        = 'In case there would be a Television, the class of the Television has to be selected. The classes follow the labels given by the Energy-using.Product directive of the EU. Classes have been divided into three categories in order to simplify the choice. A or B class, C or D class, E or F class';
        varnamecell.clTele.Comparefield   = {{'A or B class';'C or D class';'E or F class'} {'A or B class';'C or D class';'E or F class'}} ;
        varnamecell.clTele.Defaultcreate  = 'A or B class';
        varnamecell.clTele.Type           = 'cell' ;
        varnamecell.clTele.LowLimit       = '' ;
        varnamecell.clTele.HighLimit      = '' ;
        varnamecell.clTele.Exception      = {'A or B class';'C or D class';'E or F class'} ;
varnamecell.Laptop.ShortName          = 'Laptop';
        varnamecell.Laptop.LongName       = 'Laptop' ;
        varnamecell.Laptop.Unit           = '[]' ;
        varnamecell.Laptop.Defaultvalue   = '0';
        varnamecell.Laptop.Tooltip        = 'Input the number of Laptop you want to install';
        varnamecell.Laptop.Comparefield   = 'Compare';
        varnamecell.Laptop.Defaultcreate  = '0';
        varnamecell.Laptop.Type           = 'double' ;
        varnamecell.Laptop.LowLimit       = 0 ;
        varnamecell.Laptop.HighLimit      = Inf ;
        varnamecell.Laptop.Exception      = -1 ;
varnamecell.clLaptop.ShortName          = 'clLaptop';
        varnamecell.clLaptop.LongName       = 'Laptop Class' ;
        varnamecell.clLaptop.Unit           = '[]' ;
        varnamecell.clLaptop.Defaultvalue   = 'A or B class';
        varnamecell.clLaptop.Tooltip        = 'In case there would be a Laptop, the class of the Laptop has to be selected. The classes follow the labels given by the Energy-using.Product directive of the EU. Classes have been divided into three categories in order to simplify the choice. A or B class, C or D class, E or F class';
        varnamecell.clLaptop.Comparefield   = {{'A or B class';'C or D class';'E or F class'} {'A or B class';'C or D class';'E or F class'}} ;
        varnamecell.clLaptop.Defaultcreate  = 'A or B class';
        varnamecell.clLaptop.Type           = 'cell' ;
        varnamecell.clLaptop.LowLimit       = '' ;
        varnamecell.clLaptop.HighLimit      = '' ;
        varnamecell.clLaptop.Exception      = {'A or B class';'C or D class';'E or F class'} ;
varnamecell.Shaver.ShortName          = 'Shaver';
        varnamecell.Shaver.LongName       = 'Shaver' ;
        varnamecell.Shaver.Unit           = '[]' ;
        varnamecell.Shaver.Defaultvalue   = '0';
        varnamecell.Shaver.Tooltip        = 'Input the number of Shaver you want to install';
        varnamecell.Shaver.Comparefield   = 'Compare';
        varnamecell.Shaver.Defaultcreate  = '0';
        varnamecell.Shaver.Type           = 'double' ;
        varnamecell.Shaver.LowLimit       = 0 ;
        varnamecell.Shaver.HighLimit      = Inf ;
        varnamecell.Shaver.Exception      = -1 ;
varnamecell.clShaver.ShortName          = 'clShaver';
        varnamecell.clShaver.LongName       = 'Shaver Class' ;
        varnamecell.clShaver.Unit           = '[]' ;
        varnamecell.clShaver.Defaultvalue   = 'A or B class';
        varnamecell.clShaver.Tooltip        = 'In case there would be a shaver, the class of the shaver has to be selected. The classes follow the labels given by the Energy-using.Product directive of the EU. Classes have been divided into three categories in order to simplify the choice. A or B class, C or D class, E or F class';
        varnamecell.clShaver.Comparefield   = {{'A or B class';'C or D class';'E or F class'} {'A or B class';'C or D class';'E or F class'}} ;
        varnamecell.clShaver.Defaultcreate  = 'A or B class';
        varnamecell.clShaver.Type           = 'cell' ;
        varnamecell.clShaver.LowLimit       = '' ;
        varnamecell.clShaver.HighLimit      = '' ;
        varnamecell.clShaver.Exception      = {'A or B class';'C or D class';'E or F class'} ;
varnamecell.Hair.ShortName          = 'Hair';
        varnamecell.Hair.LongName       = 'Hair Dryer' ;
        varnamecell.Hair.Unit           = '[]' ;
        varnamecell.Hair.Defaultvalue   = '0';
        varnamecell.Hair.Tooltip        = 'Input the number of Hair Dryer you want to install';
        varnamecell.Hair.Comparefield   = 'Compare';
        varnamecell.Hair.Defaultcreate  = '0';
        varnamecell.Hair.Type           = 'double' ;
        varnamecell.Hair.LowLimit       = 0 ;
        varnamecell.Hair.HighLimit      = Inf ;
        varnamecell.Hair.Exception      = -1 ;
varnamecell.clHair.ShortName          = 'clHair';
        varnamecell.clHair.LongName       = 'Hair Dryer Class' ;
        varnamecell.clHair.Unit           = '[]' ;
        varnamecell.clHair.Defaultvalue   = 'A or B class';
        varnamecell.clHair.Tooltip        = 'In case there would be a Hair Dryer, the class of the Hair Dryer has to be selected. The classes follow the labels given by the Energy-using.Product directive of the EU. Classes have been divided into three categories in order to simplify the choice. A or B class, C or D class, E or F class';
        varnamecell.clHair.Comparefield   = {{'A or B class';'C or D class';'E or F class'} {'A or B class';'C or D class';'E or F class'}} ;
        varnamecell.clHair.Defaultcreate  = 'A or B class';
        varnamecell.clHair.Type           = 'cell' ;
        varnamecell.clHair.LowLimit       = '' ;
        varnamecell.clHair.HighLimit      = '' ;
        varnamecell.clHair.Exception      = {'A or B class';'C or D class';'E or F class'} ;
varnamecell.Stereo.ShortName          = 'Stereo';
        varnamecell.Stereo.LongName       = 'Stereo' ;
        varnamecell.Stereo.Unit           = '[]' ;
        varnamecell.Stereo.Defaultvalue   = '0';
        varnamecell.Stereo.Tooltip        = 'Input the number of Stereo you want to install';
        varnamecell.Stereo.Comparefield   = 'Compare';
        varnamecell.Stereo.Defaultcreate  = '0';
        varnamecell.Stereo.Type           = 'double' ;
        varnamecell.Stereo.LowLimit       = 0 ;
        varnamecell.Stereo.HighLimit      = Inf ;
        varnamecell.Stereo.Exception      = -1 ;
varnamecell.clStereo.ShortName          = 'clStereo';
        varnamecell.clStereo.LongName       = 'Hair Dryer Class' ;
        varnamecell.clStereo.Unit           = '[]' ;
        varnamecell.clStereo.Defaultvalue   = 'A or B class';
        varnamecell.clStereo.Tooltip        = 'In case there would be a Stereo, the class of the Stereo has to be selected. The classes follow the labels given by the Energy-using.Product directive of the EU. Classes have been divided into three categories in order to simplify the choice. A or B class, C or D class, E or F class';
        varnamecell.clStereo.Comparefield   = {{'A or B class';'C or D class';'E or F class'} {'A or B class';'C or D class';'E or F class'}} ;
        varnamecell.clStereo.Defaultcreate  = 'A or B class';
        varnamecell.clStereo.Type           = 'cell' ;
        varnamecell.clStereo.LowLimit       = '' ;
        varnamecell.clStereo.HighLimit      = '' ;
        varnamecell.clStereo.Exception      = {'A or B class';'C or D class';'E or F class'} ;
varnamecell.Vacuum.ShortName          = 'Vacuum';
        varnamecell.Vacuum.LongName       = 'Vacuum Cleaner' ;
        varnamecell.Vacuum.Unit           = '[]' ;
        varnamecell.Vacuum.Defaultvalue   = '0';
        varnamecell.Vacuum.Tooltip        = 'Input the number of Vacuum Cleaner you want to install';
        varnamecell.Vacuum.Comparefield   = 'Compare';
        varnamecell.Vacuum.Defaultcreate  = '0';
        varnamecell.Vacuum.Type           = 'double' ;
        varnamecell.Vacuum.LowLimit       = 0 ;
        varnamecell.Vacuum.HighLimit      = Inf ;
        varnamecell.Vacuum.Exception      = -1 ;
varnamecell.clVacuum.ShortName          = 'clVacuum';
        varnamecell.clVacuum.LongName       = 'Vacuum Cleaner Class' ;
        varnamecell.clVacuum.Unit           = '[]' ;
        varnamecell.clVacuum.Defaultvalue   = 'A or B class';
        varnamecell.clVacuum.Tooltip        = 'In case there would be a Vacuum Cleaner, the class of the Vacuum Cleaner has to be selected. The classes follow the labels given by the Energy-using.Product directive of the EU. Classes have been divided into three categories in order to simplify the choice. A or B class, C or D class, E or F class';
        varnamecell.clVacuum.Comparefield   = {{'A or B class';'C or D class';'E or F class'} {'A or B class';'C or D class';'E or F class'}} ;
        varnamecell.clVacuum.Defaultcreate  = 'A or B class';
        varnamecell.clVacuum.Type           = 'cell' ;
        varnamecell.clVacuum.LowLimit       = '' ;
        varnamecell.clVacuum.HighLimit      = '' ;
        varnamecell.clVacuum.Exception      = {'A or B class';'C or D class';'E or F class'} ;
varnamecell.Charger.ShortName          = 'Charger';
        varnamecell.Charger.LongName       = 'Telephone Charger' ;
        varnamecell.Charger.Unit           = '[]' ;
        varnamecell.Charger.Defaultvalue   = '0';
        varnamecell.Charger.Tooltip        = 'Input the number of Telephone Charger you want to install';
        varnamecell.Charger.Comparefield   = 'Compare';
        varnamecell.Charger.Defaultcreate  = '0';
        varnamecell.Charger.Type           = 'double' ;
        varnamecell.Charger.LowLimit       = 0 ;
        varnamecell.Charger.HighLimit      = Inf ;
        varnamecell.Charger.Exception      = -1 ;
varnamecell.clCharger.ShortName          = 'clCharger';
        varnamecell.clCharger.LongName       = 'VTelephone Charger Class' ;
        varnamecell.clCharger.Unit           = '[]' ;
        varnamecell.clCharger.Defaultvalue   = 'A or B class';
        varnamecell.clCharger.Tooltip        = 'In case there would be a Telephone Charger, the class of the Telephone Charger has to be selected. The classes follow the labels given by the Energy-using.Product directive of the EU. Classes have been divided into three categories in order to simplify the choice. A or B class, C or D class, E or F class';
        varnamecell.clCharger.Comparefield   = {{'A or B class';'C or D class';'E or F class'} {'A or B class';'C or D class';'E or F class'}} ;
        varnamecell.clCharger.Defaultcreate  = 'A or B class';
        varnamecell.clCharger.Type           = 'cell' ;
        varnamecell.clCharger.LowLimit       = '' ;
        varnamecell.clCharger.HighLimit      = '' ;
        varnamecell.clCharger.Exception      = {'A or B class';'C or D class';'E or F class'} ;
varnamecell.Iron.ShortName          = 'Iron';
        varnamecell.Iron.LongName       = 'Iron' ;
        varnamecell.Iron.Unit           = '[]' ;
        varnamecell.Iron.Defaultvalue   = '0';
        varnamecell.Iron.Tooltip        = 'Input the number of Iron you want to install';
        varnamecell.Iron.Comparefield   = 'Compare';
        varnamecell.Iron.Defaultcreate  = '0';
        varnamecell.Iron.Type           = 'double' ;
        varnamecell.Iron.LowLimit       = 0 ;
        varnamecell.Iron.HighLimit      = Inf ;
        varnamecell.Iron.Exception      = -1 ;
varnamecell.clIron.ShortName          = 'clIron';
        varnamecell.clIron.LongName       = 'Iron Class' ;
        varnamecell.clIron.Unit           = '[]' ;
        varnamecell.clIron.Defaultvalue   = 'A or B class';
        varnamecell.clIron.Tooltip        = 'In case there would be a Iron, the class of the Iron has to be selected. The classes follow the labels given by the Energy-using.Product directive of the EU. Classes have been divided into three categories in order to simplify the choice. A or B class, C or D class, E or F class';
        varnamecell.clIron.Comparefield   = {{'A or B class';'C or D class';'E or F class'} {'A or B class';'C or D class';'E or F class'}} ;
        varnamecell.clIron.Defaultcreate  = 'A or B class';
        varnamecell.clIron.Type           = 'cell' ;
        varnamecell.clIron.LowLimit       = '' ;
        varnamecell.clIron.HighLimit      = '' ;
        varnamecell.clIron.Exception      = {'A or B class';'C or D class';'E or F class'} ;
varnamecell.Elecheat.ShortName          = 'Elecheat';
        varnamecell.Elecheat.LongName       = 'Electric heating in bathroom' ;
        varnamecell.Elecheat.Unit           = '[]' ;
        varnamecell.Elecheat.Defaultvalue   = '0';
        varnamecell.Elecheat.Tooltip        = 'Input the number of Elecheat you want to install';   
        varnamecell.Elecheat.Comparefield   = 'Compare';
        varnamecell.Elecheat.Defaultcreate  = '0';
        varnamecell.Elecheat.Type           = 'double' ;
        varnamecell.Elecheat.LowLimit       = 0 ;
        varnamecell.Elecheat.HighLimit      = Inf ;
        varnamecell.Elecheat.Exception      = -1 ;
varnamecell.Sauna.ShortName          = 'Sauna';
        varnamecell.Sauna.LongName       = 'Sauna' ;
        varnamecell.Sauna.Unit           = '[]' ;
        varnamecell.Sauna.Defaultvalue   = '0';
        varnamecell.Sauna.Tooltip        = 'Input the number of Sauna you want to install';   
        varnamecell.Sauna.Comparefield   = 'Compare';
        varnamecell.Sauna.Defaultcreate  = '0';
        varnamecell.Sauna.Type           = 'double' ;
        varnamecell.Sauna.LowLimit       = 0 ;
        varnamecell.Sauna.HighLimit      = Inf ;
        varnamecell.Sauna.Exception      = -1 ;
varnamecell.Radio.ShortName          = 'Radio';
        varnamecell.Radio.LongName       = 'Radio' ;
        varnamecell.Radio.Unit           = '[]' ;
        varnamecell.Radio.Defaultvalue   = '0';
        varnamecell.Radio.Tooltip        = 'Input the number of Radio you want to install';
        varnamecell.Radio.Comparefield   = 'Compare';
        varnamecell.Radio.Defaultcreate  = '0';
        varnamecell.Radio.Type           = 'double' ;
        varnamecell.Radio.LowLimit       = 0 ;
        varnamecell.Radio.HighLimit      = Inf ;
        varnamecell.Radio.Exception      = -1 ;
varnamecell.clRadio.ShortName          = 'clRadio';
        varnamecell.clRadio.LongName       = 'Light Class' ;
        varnamecell.clRadio.Unit           = '[]' ;
        varnamecell.clRadio.Defaultvalue   = 'A or B class';
        varnamecell.clRadio.Tooltip        = 'In case there would be a Radio, the class of the Radio has to be selected. The classes follow the labels given by the Energy-using.Product directive of the EU. Classes have been divided into three categories in order to simplify the choice. A or B class, C or D class, E or F class';
        varnamecell.clRadio.Comparefield   = {{'A or B class';'C or D class';'E or F class'} {'A or B class';'C or D class';'E or F class'}} ;
        varnamecell.clRadio.Defaultcreate  = 'A or B class';
        varnamecell.clRadio.Type           = 'cell' ;
        varnamecell.clRadio.LowLimit       = '' ;
        varnamecell.clRadio.HighLimit      = '' ;
        varnamecell.clRadio.Exception      = {'A or B class';'C or D class';'E or F class'} ;
varnamecell.clLight.ShortName          = 'clLight';
        varnamecell.clLight.LongName       = 'Radio Class' ;
        varnamecell.clLight.Unit           = '[]' ;
        varnamecell.clLight.Defaultvalue   = 'Low consumption bulbs';
        varnamecell.clLight.Tooltip        = 'The lighting system is integrated within the dwelling. There is no need to input the number of lamps or bulbs installed in the dwelling. The number of lamps is determined in terms of power per surface area and is thus connected with the Area of the building. Two types of bulbs are selectable: Low consumption bulbs, Incandescent bulbs';
        varnamecell.clLight.Comparefield   = {{'Low consumption bulbs';'Incandescent bulbs'} {'Low consumption bulbs';'Incandescent bulbs'}} ;
        varnamecell.clLight.Defaultcreate  = 'Low consumption bulbs';
        varnamecell.clLight.Type           = 'cell' ;
        varnamecell.clLight.LowLimit       = '' ;
        varnamecell.clLight.HighLimit      = '' ;
        varnamecell.clLight.Exception      = {'Low consumption bulbs';'Incandescent bulbs'} ;
varnamecell.Metering.ShortName          = 'Metering';
        varnamecell.Metering.LongName       = 'Metering System' ;
        varnamecell.Metering.Unit           = '[]' ;
        varnamecell.Metering.Defaultvalue   = '1';
        varnamecell.Metering.Tooltip        = 'The metering system can be selected through four different channel. The first type ("1") is an analogic meter and cannot be read from outisde. This kind of meter is usually placed in existing buildings. The meter type ("2") is a numeric meter that is able to record live data but is used for billing purposes. In this matter, the meter does not communicate with the outside in real time, but once a monthf for retrieving the monthly data. The meter type "3" is upgrading its functionality. It reads real-time data and can be used for feedback purposes to the end-user. In this matter, it enhance a direct connection with the private consumers. The last type ("4") integrate the home energy management system. Direct control of appliances can be carried out through the HAN. 1: No smart meter, 2: Smart meter: reader, 3: Smart meter: reader + advisor, 4: Smart meter: reader + advisor + controller';
        varnamecell.Metering.Comparefield   = {{'1';'2';'3';'4'} {'No metering';'Metering system 2' ;'Metering system 3';'Metering system 4'}} ;
        varnamecell.Metering.Defaultcreate  = '1';
        varnamecell.Metering.Type           = 'cell' ;
        varnamecell.Metering.LowLimit       = '' ;
        varnamecell.Metering.HighLimit      = '' ;
        varnamecell.Metering.Exception      = {'1';'2';'3';'4'} ;
varnamecell.Self.ShortName          = 'Self';
        varnamecell.Self.LongName       = 'Self-Comparison' ;
        varnamecell.Self.Unit           = '[]' ;
        varnamecell.Self.Defaultvalue   = '0';
        varnamecell.Self.Tooltip        = 'The self comparison feedback strategy is meant to compare the electricity consumption to the historical consumption of the private consumer. Multiple self comparison have been encoded: 1- The daily electricity consumption comparison, 2- The weekly electricity consumption comparison, 3- The monthly electricity consumption comparison, 4- The yearly electricity consumption comparison. This feedback method can be chosen in parallel with the inter-comparison method and the Target method. If you want to select this feedback strategy, then select: 0: No, 1: Yes' ;
        varnamecell.Self.Comparefield   = {{'0';'1'} {'Inactive';'Active'}} ;
        varnamecell.Self.Defaultcreate  = '0';
        varnamecell.Self.Type           = 'cell' ;
        varnamecell.Self.LowLimit       = '' ;
        varnamecell.Self.HighLimit      = '' ;
        varnamecell.Self.Exception      = {'0';'1'} ;
varnamecell.Comp.ShortName          = 'Comp';
        varnamecell.Comp.LongName       = 'Inter-Comparison' ;
        varnamecell.Comp.Unit           = '[]' ;
        varnamecell.Comp.Defaultvalue   = '0';
        varnamecell.Comp.Tooltip        = 'The inter-comparison feedback method allows adjusting the electricity consumption by comparing your electricity consumption with an average electricity consumption within a neighborhood, or with similar buildings. This methods is not up and running as the micro-grid should be formed first. This feedback method can be chosen in parallel with the self-comparison method and the Target method. If you want to select this feedback strategy, then select: 0: No, 1: Yes' ;
        varnamecell.Comp.Comparefield   = {{'0';'1'} {'Inactive';'Active'}} ;
        varnamecell.Comp.Defaultcreate  = '0';
        varnamecell.Comp.Type           = 'cell' ;
        varnamecell.Comp.LowLimit       = '' ;
        varnamecell.Comp.HighLimit      = '' ;
        varnamecell.Comp.Exception      = {'0';'1'} ;
varnamecell.Goal.ShortName          = 'Goal';
        varnamecell.Goal.LongName       = 'Target set by the house' ;
        varnamecell.Goal.Unit           = '[]' ;
        varnamecell.Goal.Defaultvalue   = '0';
        varnamecell.Goal.Tooltip        = 'This feedback strategy consider another set of tool for reducing the electricity consumption. It uses the self-comparison values in order to set electricity consumption target. depending on the success of the users + the technical limitations of technology for reducing the energy consumption or for shaving the peaks. This feedback method can be chosen in parallel with the self-comparison method and the Inter-comparison methods. If you want to select this feedback strategy, then select: 0: No, 1: Yes' ;
        varnamecell.Goal.Comparefield   = {{'0';'1'} {'Inactive';'Active'}} ;
        varnamecell.Goal.Defaultcreate  = '0';
        varnamecell.Goal.Type           = 'cell' ;
        varnamecell.Goal.LowLimit       = '' ;
        varnamecell.Goal.HighLimit      = '' ;
        varnamecell.Goal.Exception      = {'0';'1'} ;
varnamecell.Bill.ShortName          = 'Bill';
        varnamecell.Bill.LongName       = 'Billing only' ;
        varnamecell.Bill.Unit           = '[]' ;
        varnamecell.Bill.Defaultvalue   = '0';
        varnamecell.Bill.Tooltip        = 'This feedback strategy consider another set of tool for reducing the electricity consumption. It uses the self-comparison values in order to set electricity consumption target. depending on the success of the users + the technical limitations of technology for reducing the energy consumption or for shaving the peaks. This feedback method can be chosen in parallel with the self-comparison method and the Inter-comparison methods. If you want to select this feedback strategy, then select: 0: No, 1: Yes' ;
        varnamecell.Bill.Comparefield   = {{'0';'1'} {'Inactive';'Active'}} ;
        varnamecell.Bill.Defaultcreate  = '0';
        varnamecell.Bill.Type           = 'cell' ;
        varnamecell.Bill.LowLimit       = '' ;
        varnamecell.Bill.HighLimit      = '' ;
        varnamecell.Bill.Exception      = {'0';'1'} ;
varnamecell.myiter.ShortName          = 'myiter';
        varnamecell.myiter.LongName       = 'Iteration Status' ;
        varnamecell.myiter.Unit           = '[]' ;
        varnamecell.myiter.Defaultvalue   = '0';
		varnamecell.myiter.Tooltip        = 'State the step number of the simulation';
		varnamecell.myiter.Comparefield   = 'TO BE REMOVED';
        varnamecell.myiter.Defaultcreate  = '0';
        varnamecell.myiter.Type           = 'string' ;
        varnamecell.myiter.LowLimit       = '' ;
        varnamecell.myiter.HighLimit      = '' ;
        varnamecell.myiter.Exception      = '' ;
varnamecell.Building_Area.ShortName          = 'Building_Area';
        varnamecell.Building_Area.LongName       = 'Area of the building' ;
        varnamecell.Building_Area.Unit           = '[m2]' ;
        varnamecell.Building_Area.Defaultvalue   = '-1';
        varnamecell.Building_Area.Tooltip        = 'The building floor area has been set to fit the statistics of Finland where the approximate surface area per person is estimated to be around 39.6 m2. Thus the floor area of the building can be set as a default value. 0: default value (39.6m2 per inhabitants) or Any other values above 0';
        varnamecell.Building_Area.Comparefield   = 'Compare';
        varnamecell.Building_Area.Defaultcreate  = '-1';
        varnamecell.Building_Area.Type           = 'double' ;
        varnamecell.Building_Area.LowLimit       = 0; %>=
        varnamecell.Building_Area.HighLimit      = Inf;
        varnamecell.Building_Area.Exception      = -1;
varnamecell.hgt.ShortName          = 'hgt';
        varnamecell.hgt.LongName       = 'Height to eves' ;
        varnamecell.hgt.Unit           = '[m]' ;
        varnamecell.hgt.Defaultvalue   = '12';
        varnamecell.hgt.Tooltip        = '';
        varnamecell.hgt.Comparefield   = 'Compare';
        varnamecell.hgt.Defaultcreate  = '12';
        varnamecell.hgt.Type           = 'double' ;
        varnamecell.hgt.LowLimit       = 0.000000001; %>=
        varnamecell.hgt.HighLimit      = Inf;
        varnamecell.hgt.Exception      = -1;
varnamecell.lgts.ShortName          = 'lgts';
        varnamecell.lgts.LongName       = 'Lenght of the south wall' ;
        varnamecell.lgts.Unit           = '[m]' ;
        varnamecell.lgts.Defaultvalue   = '9.2';
        varnamecell.lgts.Tooltip        = '';
        varnamecell.lgts.Comparefield   = 'Compare';
        varnamecell.lgts.Defaultcreate  = '9.2';
        varnamecell.lgts.Type           = 'double' ;
        varnamecell.lgts.LowLimit       = 0.000000001; %>=
        varnamecell.lgts.HighLimit      = Inf;
        varnamecell.lgts.Exception      = -1;
varnamecell.lgte.ShortName          = 'lgte';
        varnamecell.lgte.LongName       = 'Lenght of the east wall' ;
        varnamecell.lgte.Unit           = '[m]' ;
        varnamecell.lgte.Defaultvalue   = '45';
        varnamecell.lgte.Tooltip        = '';
        varnamecell.lgte.Comparefield   = 'Compare';
        varnamecell.lgte.Defaultcreate  = '45';
        varnamecell.lgte.Type           = 'double' ;
        varnamecell.lgte.LowLimit       = 0.000000001; %>=
        varnamecell.lgte.HighLimit      = Inf;
        varnamecell.lgte.Exception      = -1;
varnamecell.pitchangle.ShortName          = 'pitchangle';
        varnamecell.pitchangle.LongName       = 'pitch angle of the roof' ;
        varnamecell.pitchangle.Unit           = '[°]' ;
        varnamecell.pitchangle.Defaultvalue   = '8';
        varnamecell.pitchangle.Tooltip        = '';
        varnamecell.pitchangle.Comparefield   = 'Compare';
        varnamecell.pitchangle.Defaultcreate  = '8';
        varnamecell.pitchangle.Type           = 'double' ;
        varnamecell.pitchangle.LowLimit       = 0.000000001; %>=
        varnamecell.pitchangle.HighLimit      = Inf;
        varnamecell.pitchangle.Exception      = -1;
varnamecell.aws.ShortName          = 'aws';
        varnamecell.aws.LongName       = 'Window Area South wall' ;
        varnamecell.aws.Unit           = '[m2]' ;
        varnamecell.aws.Defaultvalue   = '3';
        varnamecell.aws.Tooltip        = '';
        varnamecell.aws.Comparefield   = 'Compare';
        varnamecell.aws.Defaultcreate  = '3';
        varnamecell.aws.Type           = 'double' ;
        varnamecell.aws.LowLimit       = 0.000000001; %>=
        varnamecell.aws.HighLimit      = Inf;
        varnamecell.aws.Exception      = -1;
varnamecell.awe.ShortName          = 'awe';
        varnamecell.awe.LongName       = 'Window Area East wall' ;
        varnamecell.awe.Unit           = '[m2]' ;
        varnamecell.awe.Defaultvalue   = '3';
        varnamecell.awe.Tooltip        = '';
        varnamecell.awe.Comparefield   = 'Compare';
        varnamecell.awe.Defaultcreate  = '3';
        varnamecell.awe.Type           = 'double' ;
        varnamecell.awe.LowLimit       = 0.000000001; %>=
        varnamecell.awe.HighLimit      = Inf;
        varnamecell.awe.Exception      = -1;
varnamecell.awn.ShortName          = 'awn';
        varnamecell.awn.LongName       = 'Window Area North wall' ;
        varnamecell.awn.Unit           = '[m2]' ;
        varnamecell.awn.Defaultvalue   = '3';
        varnamecell.awn.Tooltip        = '';
        varnamecell.awn.Comparefield   = 'Compare';
        varnamecell.awn.Defaultcreate  = '3';
        varnamecell.awn.Type           = 'double' ;
        varnamecell.awn.LowLimit       = 0.000000001; %>=
        varnamecell.awn.HighLimit      = Inf;
        varnamecell.awn.Exception      = -1;
varnamecell.aww.ShortName          = 'aww';
        varnamecell.aww.LongName       = 'Window Area West wall' ;
        varnamecell.aww.Unit           = '[m2]' ;
        varnamecell.aww.Defaultvalue   = '3';
        varnamecell.aww.Tooltip        = '';
        varnamecell.aww.Comparefield   = 'Compare';
        varnamecell.aww.Defaultcreate  = '3';
        varnamecell.aww.Type           = 'double' ;
        varnamecell.aww.LowLimit       = 0.000000001; %>=
        varnamecell.aww.HighLimit      = Inf;
        varnamecell.aww.Exception      = -1;
varnamecell.ad.ShortName          = 'ad';
        varnamecell.ad.LongName       = 'Door Area South wall' ;
        varnamecell.ad.Unit           = '[m2]' ;
        varnamecell.ad.Defaultvalue   = '0.2';
        varnamecell.ad.Tooltip        = '';
        varnamecell.ad.Comparefield   = 'Compare';
        varnamecell.ad.Defaultcreate  = '0.2';
        varnamecell.ad.Type           = 'double' ;
        varnamecell.ad.LowLimit       = 0.000000001; %>=
        varnamecell.ad.HighLimit      = Inf;
        varnamecell.ad.Exception      = -1;
varnamecell.uvs.ShortName          = 'uvs';
        varnamecell.uvs.LongName       = 'U-Value South Wall' ;
        varnamecell.uvs.Unit           = '[W/m2.K]' ;
        varnamecell.uvs.Defaultvalue   = '0.2';
        varnamecell.uvs.Tooltip        = '';
        varnamecell.uvs.Comparefield   = 'Compare';
        varnamecell.uvs.Defaultcreate  = '0.2';
        varnamecell.uvs.Type           = 'double' ;
        varnamecell.uvs.LowLimit       = 0.000000001; %>=
        varnamecell.uvs.HighLimit      = Inf;
        varnamecell.uvs.Exception      = -1;
varnamecell.uve.ShortName          = 'uve';
        varnamecell.uve.LongName       = 'U-Value East Wall' ;
        varnamecell.uve.Unit           = '[W/m2.K]' ;
        varnamecell.uve.Defaultvalue   = '0.2';
        varnamecell.uve.Tooltip        = '';
        varnamecell.uve.Comparefield   = 'Compare';
        varnamecell.uve.Defaultcreate  = '0.2';
        varnamecell.uve.Type           = 'double' ;
        varnamecell.uve.LowLimit       = 0.000000001; %>=
        varnamecell.uve.HighLimit      = Inf;
        varnamecell.uve.Exception      = -1;
varnamecell.uvn.ShortName          = 'uvn';
        varnamecell.uvn.LongName       = 'U-Value North Wall' ;
        varnamecell.uvn.Unit           = '[W/m2.K]' ;
        varnamecell.uvn.Defaultvalue   = '0.2';
        varnamecell.uvn.Tooltip        = '';
        varnamecell.uvn.Comparefield   = 'Compare';
        varnamecell.uvn.Defaultcreate  = '0.2';
        varnamecell.uvn.Type           = 'double' ;
        varnamecell.uvn.LowLimit       = 0.000000001; %>=
        varnamecell.uvn.HighLimit      = Inf;
        varnamecell.uvn.Exception      = -1;
varnamecell.uvw.ShortName          = 'uvw';
        varnamecell.uvw.LongName       = 'U-Value West Wall' ;
        varnamecell.uvw.Unit           = '[W/m2.K]' ;
        varnamecell.uvw.Defaultvalue   = '0.2';
        varnamecell.uvw.Tooltip        = '';
        varnamecell.uvw.Comparefield   = 'Compare';
        varnamecell.uvw.Defaultcreate  = '0.2';
        varnamecell.uvw.Type           = 'double' ;
        varnamecell.uvw.LowLimit       = 0.000000001; %>=
        varnamecell.uvw.HighLimit      = Inf;
        varnamecell.uvw.Exception      = -1;
varnamecell.uvsw.ShortName          = 'uvsw';
        varnamecell.uvsw.LongName       = 'U-Value South Window' ;
        varnamecell.uvsw.Unit           = '[W/m2.K]' ;
        varnamecell.uvsw.Defaultvalue   = '1';
        varnamecell.uvsw.Tooltip        = '';
        varnamecell.uvsw.Comparefield   = 'Compare';
        varnamecell.uvsw.Defaultcreate  = '1';
        varnamecell.uvsw.Type           = 'double' ;
        varnamecell.uvsw.LowLimit       = 0.000000001; %>=
        varnamecell.uvsw.HighLimit      = Inf;
        varnamecell.uvsw.Exception      = -1;
varnamecell.uvew.ShortName          = 'uvew';
        varnamecell.uvew.LongName       = 'U-Value East Window' ;
        varnamecell.uvew.Unit           = '[W/m2.K]' ;
        varnamecell.uvew.Defaultvalue   = '1';
        varnamecell.uvew.Tooltip        = '';
        varnamecell.uvew.Comparefield   = 'Compare';
        varnamecell.uvew.Defaultcreate  = '1';
        varnamecell.uvew.Type           = 'double' ;
        varnamecell.uvew.LowLimit       = 0.000000001; %>=
        varnamecell.uvew.HighLimit      = Inf;
        varnamecell.uvew.Exception      = -1;
varnamecell.uvnw.ShortName          = 'uvnw';
        varnamecell.uvnw.LongName       = 'U-Value North Window' ;
        varnamecell.uvnw.Unit           = '[W/m2.K]' ;
        varnamecell.uvnw.Defaultvalue   = '1';
        varnamecell.uvnw.Tooltip        = '';
        varnamecell.uvnw.Comparefield   = 'Compare';
        varnamecell.uvnw.Defaultcreate  = '1';
        varnamecell.uvnw.Type           = 'double' ;
        varnamecell.uvnw.LowLimit       = 0.000000001; %>=
        varnamecell.uvnw.HighLimit      = Inf;
        varnamecell.uvnw.Exception      = -1;
varnamecell.uvww.ShortName          = 'uvww';
        varnamecell.uvww.LongName       = 'U-Value West Window' ;
        varnamecell.uvww.Unit           = '[W/m2.K]' ;
        varnamecell.uvww.Defaultvalue   = '1';
        varnamecell.uvww.Tooltip        = '';
        varnamecell.uvww.Comparefield   = 'Compare';
        varnamecell.uvww.Defaultcreate  = '1';
        varnamecell.uvww.Type           = 'double' ;
        varnamecell.uvww.LowLimit       = 0.000000001; %>=
        varnamecell.uvww.HighLimit      = Inf;
        varnamecell.uvww.Exception      = -1;
varnamecell.uvd.ShortName          = 'uvd';
        varnamecell.uvd.LongName       = 'U-Value Door' ;
        varnamecell.uvd.Unit           = '[W/m2.K]' ;
        varnamecell.uvd.Defaultvalue   = '0.2';
        varnamecell.uvd.Tooltip        = '';
        varnamecell.uvd.Comparefield   = 'Compare';
        varnamecell.uvd.Defaultcreate  = '0.2';
        varnamecell.uvd.Type           = 'double' ;
        varnamecell.uvd.LowLimit       = 0.000000001; %>=
        varnamecell.uvd.HighLimit      = Inf;
        varnamecell.uvd.Exception      = -1;
varnamecell.uvf.ShortName          = 'uvf';
        varnamecell.uvf.LongName       = 'U-Value Floor' ;
        varnamecell.uvf.Unit           = '[W/m2.K]' ;
        varnamecell.uvf.Defaultvalue   = '0.1';
        varnamecell.uvf.Tooltip        = '';
        varnamecell.uvf.Comparefield   = 'Compare';
        varnamecell.uvf.Defaultcreate  = '0.1';
        varnamecell.uvf.Type           = 'double' ;
        varnamecell.uvf.LowLimit       = 0.000000001; %>=
        varnamecell.uvf.HighLimit      = Inf;
        varnamecell.uvf.Exception      = -1;
varnamecell.uvr.ShortName          = 'uvr';
        varnamecell.uvr.LongName       = 'U-Value Roof' ;
        varnamecell.uvr.Unit           = '[W/m2.K]' ;
        varnamecell.uvr.Defaultvalue   = '1';
        varnamecell.uvr.Tooltip        = '';
        varnamecell.uvr.Comparefield   = 'Compare';
        varnamecell.uvr.Defaultcreate  = '1';
        varnamecell.uvr.Type           = 'double' ;
        varnamecell.uvr.LowLimit       = 0.000000001; %>=
        varnamecell.uvr.HighLimit      = Inf;
        varnamecell.uvr.Exception      = -1;
varnamecell.N0.ShortName          = 'N0';
        varnamecell.N0.LongName       = 'Number of Air Change per hour' ;
        varnamecell.N0.Unit           = '[m3total/h]' ;
        varnamecell.N0.Defaultvalue   = '1';
        varnamecell.N0.Tooltip        = '';
        varnamecell.N0.Comparefield   = 'Compare';
        varnamecell.N0.Defaultcreate  = '1';
        varnamecell.N0.Type           = 'double' ;
        varnamecell.N0.LowLimit       = 0.000000001; %>=
        varnamecell.N0.HighLimit      = Inf;
        varnamecell.N0.Exception      = -1;		
varnamecell.HighNbHouse.ShortName          = 'HighNbHouse';
        varnamecell.HighNbHouse.LongName       = 'Highest house number' ;
        varnamecell.HighNbHouse.Unit           = '[]' ;
        varnamecell.HighNbHouse.Defaultvalue   = '1';
        varnamecell.HighNbHouse.Tooltip        = '';
        varnamecell.HighNbHouse.Comparefield   = 'TO BE REMOVED';
        varnamecell.HighNbHouse.Defaultcreate  = '1';
        varnamecell.HighNbHouse.Type           = 'string' ;
        varnamecell.HighNbHouse.LowLimit       = '';
        varnamecell.HighNbHouse.HighLimit      = '';
        varnamecell.HighNbHouse.Exception      = '';	
varnamecell.HighNbrRoom.ShortName          = 'HighNbrRoom';
        varnamecell.HighNbrRoom.LongName       = 'Highest room number' ;
        varnamecell.HighNbrRoom.Unit           = '[]' ;
        varnamecell.HighNbrRoom.Defaultvalue   = '1';
        varnamecell.HighNbrRoom.Tooltip        = '';
        varnamecell.HighNbrRoom.Comparefield   = 'TO BE REMOVED';
        varnamecell.HighNbrRoom.Defaultcreate  = '1';
        varnamecell.HighNbrRoom.Type           = 'string' ;
        varnamecell.HighNbrRoom.LowLimit       = '';
        varnamecell.HighNbrRoom.HighLimit      = '';
        varnamecell.HighNbrRoom.Exception      = '';
varnamecell.VTempCoff.ShortName          = 'VTempCoff';
        varnamecell.VTempCoff.LongName       = 'Coefficient of voltage' ;
        varnamecell.VTempCoff.Unit           = '[%/C]' ;
        varnamecell.VTempCoff.Defaultvalue   = '-0.0023';
        varnamecell.VTempCoff.Tooltip        = '';
        varnamecell.VTempCoff.Comparefield   = 'Compare';
        varnamecell.VTempCoff.Defaultcreate  = '-0.0023';
        varnamecell.VTempCoff.Type           = 'double' ;
        varnamecell.VTempCoff.LowLimit       = 0.000000001; %>=
        varnamecell.VTempCoff.HighLimit      = Inf;
        varnamecell.VTempCoff.Exception      = -1;		
varnamecell.Building_Type.ShortName          = 'Building_Type';
        varnamecell.Building_Type.LongName       = 'Type of building modelled' ;
        varnamecell.Building_Type.Unit           = '[]' ;
        varnamecell.Building_Type.Defaultvalue   = '1';
        varnamecell.Building_Type.Tooltip        = '1 = Detached House; 2 = Appartment Building';
        varnamecell.Building_Type.Comparefield   = {{'1','2'} {'Detached house','Appartment building'}} ;
        varnamecell.Building_Type.Defaultcreate  = '1';
        varnamecell.Building_Type.Type           = 'cell' ;
        varnamecell.Building_Type.LowLimit       = ''; %>=
        varnamecell.Building_Type.HighLimit      = '';
        varnamecell.Building_Type.Exception      = {'1','2'};	
varnamecell.Appliance_Max.ShortName          = 'Appliance_Max';
        varnamecell.Appliance_Max.LongName       = 'Maximum Number of Appliances' ;
        varnamecell.Appliance_Max.Unit           = '[]' ;
        varnamecell.Appliance_Max.Defaultvalue   = '0';
        varnamecell.Appliance_Max.Tooltip        = 'Calculate the maximum number of appliances for each dwelling. It will define the number of iteration for the exact number of appliances within the home';          
		varnamecell.Appliance_Max.Comparefield   = 'Compare' ;
        varnamecell.Appliance_Max.Defaultcreate  = '0';
        varnamecell.Appliance_Max.Type           = 'double' ;
        varnamecell.Appliance_Max.LowLimit       = 0; %>=
        varnamecell.Appliance_Max.HighLimit      = Inf;
        varnamecell.Appliance_Max.Exception      = -1;			
varnamecell.Low_Price.ShortName          = 'Low_Price';
        varnamecell.Low_Price.LongName       = 'Spot Price limited value' ;
        varnamecell.Low_Price.Unit           = '[cts€]' ;
        varnamecell.Low_Price.Defaultvalue   = '0';
        varnamecell.Low_Price.Tooltip        = 'In case the real-time (RTT) pricing is chosen, then it is possible to set a low limiting value. In case no limiting value needs to be set, the default value is "-99999", but you can leave the cell blamk, it will get filled automatically. One of the condition to be respected is that the low price must be greater than the higher limit value and vice versa.';          
    	varnamecell.Low_Price.Comparefield   = 'Compare' ;
        varnamecell.Low_Price.Defaultcreate  = '0';
        varnamecell.Low_Price.Type           = 'double' ;
        varnamecell.Low_Price.LowLimit       = 0; %>=
        varnamecell.Low_Price.HighLimit      = Inf;
        varnamecell.Low_Price.Exception      = -1;	
varnamecell.High_Price.ShortName          = 'High_Price';
        varnamecell.High_Price.LongName       = 'Spot Price limited value' ;
        varnamecell.High_Price.Unit           = '[cts€]' ;
        varnamecell.High_Price.Defaultvalue   = '0';
        varnamecell.High_Price.Tooltip        = 'In case the real-time (RTT) pricing is chosen, then it is possible to set a high limiting value. In case no limiting value needs to be set, the default value is "99999", but you can leave the cell blamk, it will get filled automatically. One of the condition to be respected is that the low price must be greater than the higher limit value and vice versa.';          
    	varnamecell.High_Price.Comparefield   = 'Compare' ;
        varnamecell.High_Price.Defaultcreate  = '0';
        varnamecell.High_Price.Type           = 'double' ;
        varnamecell.High_Price.LowLimit       = 0; %>=
        varnamecell.High_Price.HighLimit      = Inf;
        varnamecell.High_Price.Exception      = -1;				
varnamecell.Contract.ShortName          = 'Contract';
        varnamecell.Contract.LongName       = 'Contracts' ;
        varnamecell.Contract.Unit           = '[cts€]' ;
        varnamecell.Contract.Defaultvalue   = 'Fixed Tariff';
        varnamecell.Contract.Tooltip        = 'In case a specific contract is chosen, then the type of contract must be specified. The time of use tariffs is defined as 2 time zone (7-22 and 22-7) accordingly the week-end and the weekday as well as a winter and summer tariff. All the contracts are already defined in the simulation.';          
    	varnamecell.Contract.Comparefield   = {{'Fixed Tariff';'ToU Tariff'} {'Fixed Tariff';'Time of Use Tariffs'}};
        varnamecell.Contract.Defaultcreate  = 'Fixed Tariff' ;
        varnamecell.Contract.Type           = 'string' ;
        varnamecell.Contract.LowLimit       = ''; %>=
        varnamecell.Contract.HighLimit      = '';
        varnamecell.Contract.Exception      = {'Fixed Tariff';'ToU Tariff'};		
varnamecell.Profile.ShortName          = 'Profile';
        varnamecell.Profile.LongName       = 'Load Profile' ;
        varnamecell.Profile.Unit           = '[]' ;
        varnamecell.Profile.Defaultvalue   = '1';
        varnamecell.Profile.Tooltip        = '2 type of profile are defined into the metering decree. This option allows choosing one of hte 2 main profile.';          
    	varnamecell.Profile.Comparefield   = {{'1';'2'} {'Profile 1';'Profile 2'}};
        varnamecell.Profile.Defaultcreate  = '1' ;
        varnamecell.Profile.Type           = 'string' ;
        varnamecell.Profile.LowLimit       = ''; %>=
        varnamecell.Profile.HighLimit      = '';
        varnamecell.Profile.Exception      = {'1';'2'};	